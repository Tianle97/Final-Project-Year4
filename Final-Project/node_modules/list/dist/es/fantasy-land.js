import { List, equals, map, filter, empty, concat, foldl, of, ap, chain } from "./index";
List.prototype["fantasy-land/equals"] = function (l) {
    return equals(this, l);
};
List.prototype["fantasy-land/map"] = function (f) {
    return map(f, this);
};
List.prototype["fantasy-land/of"] = of;
List.prototype["fantasy-land/ap"] = function (listF) {
    return ap(listF, this);
};
List.prototype["fantasy-land/chain"] = function (f) {
    return chain(f, this);
};
List.prototype["fantasy-land/filter"] = function (predicate) {
    return filter(predicate, this);
};
List.prototype["fantasy-land/empty"] = function () {
    return empty();
};
List.prototype["fantasy-land/concat"] = function (right) {
    return concat(this, right);
};
List.prototype["fantasy-land/reduce"] = function (f, initial) {
    return foldl(f, initial, this);
};
//# sourceMappingURL=fantasy-land.js.map